{
    "title": "Transport for London Unified",
    "description": "Our unified API brings together data across all modes of transport into a single RESTful API. This API provides access to the most highly requested realtime and status infomation across all the modes of transport, in a single and consistent way. Access to the developer documentation is available at https://api.tfl.gov.uk",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/tfl.gov.uk/v1/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://push-api-argon.tfl.gov.uk:8001/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "apiKey": {
                "label": "app_key (apiKey)",
                "viewClass": "TextFieldView",
                "note": "API Key Authentication"
            },
            "appId": {
                "label": "app_id (appId)",
                "viewClass": "TextFieldView",
                "note": "Application ID"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AccidentStats_Get": {
            "main": "./lib/actions/AccidentStats_Get.js",
            "title": "Gets all accident details for accidents occuring in the specified year",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AccidentStats_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AirQuality_Get": {
            "main": "./lib/actions/AirQuality_Get.js",
            "title": "Gets air quality data feed",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AirQuality_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BikePoint_GetAll": {
            "main": "./lib/actions/BikePoint_GetAll.js",
            "title": "Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces\r\n            numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BikePoint_GetAll.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BikePoint_Search": {
            "main": "./lib/actions/BikePoint_Search.js",
            "title": "Search for bike stations by their name, a bike point's name often contains information about the name of the street\r\n            or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status\r\n            or occupancy of the BikePoint, to get that information you should retrieve the BikePoint by its id on /BikePoint/id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BikePoint_Search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BikePoint_Get": {
            "main": "./lib/actions/BikePoint_Get.js",
            "title": "Gets the bike point with the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BikePoint_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Cabwise_Get": {
            "main": "./lib/actions/Cabwise_Get.js",
            "title": "Gets taxis and minicabs contact information",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Cabwise_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Journey_JourneyResults": {
            "main": "./lib/actions/Journey_JourneyResults.js",
            "title": "Perform a Journey Planner search from the parameters specified in simple types",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Journey_JourneyResults.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Journey_Meta": {
            "main": "./lib/actions/Journey_Meta.js",
            "title": "Gets a list of all of the available journey planner modes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Journey_Meta.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_MetaDisruptionCategories": {
            "main": "./lib/actions/Line_MetaDisruptionCategories.js",
            "title": "Gets a list of valid disruption categories",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_MetaDisruptionCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_MetaModes": {
            "main": "./lib/actions/Line_MetaModes.js",
            "title": "Gets a list of valid modes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_MetaModes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_MetaServiceTypes": {
            "main": "./lib/actions/Line_MetaServiceTypes.js",
            "title": "Gets a list of valid ServiceTypes to filter on",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_MetaServiceTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_MetaSeverity": {
            "main": "./lib/actions/Line_MetaSeverity.js",
            "title": "Gets a list of valid severity codes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_MetaSeverity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_GetByMode": {
            "main": "./lib/actions/Line_GetByMode.js",
            "title": "Gets lines that serve the given modes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_GetByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_DisruptionByMode": {
            "main": "./lib/actions/Line_DisruptionByMode.js",
            "title": "Get disruptions for all lines of the given modes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_DisruptionByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_RouteByMode": {
            "main": "./lib/actions/Line_RouteByMode.js",
            "title": "Gets all lines and their valid routes for given modes, including the name and id of the originating and terminating stops for each route",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_RouteByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_StatusByMode": {
            "main": "./lib/actions/Line_StatusByMode.js",
            "title": "Gets the line status of for all lines for the given modes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_StatusByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Route": {
            "main": "./lib/actions/Line_Route.js",
            "title": "Get all valid routes for all lines, including the name and id of the originating and terminating stops for each route.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Route.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Search": {
            "main": "./lib/actions/Line_Search.js",
            "title": "Search for lines or routes matching the query string",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_StatusBySeverity": {
            "main": "./lib/actions/Line_StatusBySeverity.js",
            "title": "Gets the line status for all lines with a given severity\r\n            A list of valid severity codes can be obtained from a call to Line/Meta/Severity",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_StatusBySeverity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Get": {
            "main": "./lib/actions/Line_Get.js",
            "title": "Gets lines that match the specified line ids.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Arrivals": {
            "main": "./lib/actions/Line_Arrivals.js",
            "title": "Get the list of arrival predictions for given line ids based at the given stop",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Arrivals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Disruption": {
            "main": "./lib/actions/Line_Disruption.js",
            "title": "Get disruptions for the given line ids",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Disruption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_LineRoutesByIds": {
            "main": "./lib/actions/Line_LineRoutesByIds.js",
            "title": "Get all valid routes for given line ids, including the name and id of the originating and terminating stops for each route.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_LineRoutesByIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_StatusByIds": {
            "main": "./lib/actions/Line_StatusByIds.js",
            "title": "Gets the line status of for given line ids e.g Minor Delays",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_StatusByIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Status": {
            "main": "./lib/actions/Line_Status.js",
            "title": "Gets the line status for given line ids during the provided dates e.g Minor Delays",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Status.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_RouteSequence": {
            "main": "./lib/actions/Line_RouteSequence.js",
            "title": "Gets all valid routes for given line id, including the sequence of stops on each route.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_RouteSequence.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_StopPoints": {
            "main": "./lib/actions/Line_StopPoints.js",
            "title": "Gets a list of the stations that serve the given line id",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_StopPoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_Timetable": {
            "main": "./lib/actions/Line_Timetable.js",
            "title": "Gets the timetable for a specified station on the give line",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_Timetable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Line_TimetableTo": {
            "main": "./lib/actions/Line_TimetableTo.js",
            "title": "Gets the timetable for a specified station on the give line with specified destination",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Line_TimetableTo.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Mode_GetActiveServiceTypes": {
            "main": "./lib/actions/Mode_GetActiveServiceTypes.js",
            "title": "Returns the service type active for a mode.\r\n            Currently only supports tube",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Mode_GetActiveServiceTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Mode_Arrivals": {
            "main": "./lib/actions/Mode_Arrivals.js",
            "title": "Gets the next arrival predictions for all stops of a given mode",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Mode_Arrivals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Occupancy_GetBikePointsOccupancies": {
            "main": "./lib/actions/Occupancy_GetBikePointsOccupancies.js",
            "title": "Get the occupancy for bike points.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Occupancy_GetBikePointsOccupancies.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_Occupancy_CarPark": {
            "main": "./lib/actions/get_Occupancy_CarPark.js",
            "title": "Gets the occupancy for all car parks that have occupancy data",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_Occupancy_CarPark.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_Occupancy_CarPark__id_": {
            "main": "./lib/actions/get_Occupancy_CarPark__id_.js",
            "title": "Gets the occupancy for a car park with a given id",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_Occupancy_CarPark__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Occupancy_GetAllChargeConnectorStatus": {
            "main": "./lib/actions/Occupancy_GetAllChargeConnectorStatus.js",
            "title": "Gets the occupancy for all charge connectors",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Occupancy_GetAllChargeConnectorStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Occupancy_GetChargeConnectorStatus": {
            "main": "./lib/actions/Occupancy_GetChargeConnectorStatus.js",
            "title": "Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Occupancy_GetChargeConnectorStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_GetByGeoBox": {
            "main": "./lib/actions/Place_GetByGeoBox.js",
            "title": "Gets the places that lie within the bounding box defined by the lat/lon of its north-west and south-east corners. Optionally filters\r\n            on type and can strip properties for a smaller payload.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_GetByGeoBox.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_GetStreetsByPostCode": {
            "main": "./lib/actions/Place_GetStreetsByPostCode.js",
            "title": "Gets the set of streets associated with a post code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_GetStreetsByPostCode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_MetaCategories": {
            "main": "./lib/actions/Place_MetaCategories.js",
            "title": "Gets a list of all of the available place property categories and keys.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_MetaCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_MetaPlaceTypes": {
            "main": "./lib/actions/Place_MetaPlaceTypes.js",
            "title": "Gets a list of the available types of Place.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_MetaPlaceTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_Search": {
            "main": "./lib/actions/Place_Search.js",
            "title": "Gets all places that matches the given query",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_Search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_GetByType": {
            "main": "./lib/actions/Place_GetByType.js",
            "title": "Gets all places of a given type",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_GetByType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_Get": {
            "main": "./lib/actions/Place_Get.js",
            "title": "Gets the place with the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_GetAt": {
            "main": "./lib/actions/Place_GetAt.js",
            "title": "Gets any places of the given type whose geography intersects the given latitude and longitude. In practice this means the Place\r\n            must be polygonal e.g. a BoroughBoundary.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_GetAt.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Place_GetOverlay": {
            "main": "./lib/actions/Place_GetOverlay.js",
            "title": "Gets the place overlay for a given set of co-ordinates and a given width/height.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Place_GetOverlay.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_Road": {
            "main": "./lib/actions/get_Road.js",
            "title": "Gets all roads managed by TfL",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_Road.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_MetaCategories": {
            "main": "./lib/actions/Road_MetaCategories.js",
            "title": "Gets a list of valid RoadDisruption categories",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_MetaCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_MetaSeverities": {
            "main": "./lib/actions/Road_MetaSeverities.js",
            "title": "Gets a list of valid RoadDisruption severity codes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_MetaSeverities.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_DisruptionById": {
            "main": "./lib/actions/Road_DisruptionById.js",
            "title": "Gets a list of active disruptions filtered by disruption Ids.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_DisruptionById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_DisruptedStreets": {
            "main": "./lib/actions/Road_DisruptedStreets.js",
            "title": "Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_DisruptedStreets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_Road__ids_": {
            "main": "./lib/actions/get_Road__ids_.js",
            "title": "Gets the road with the specified id (e.g. A1)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_Road__ids_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_Disruption": {
            "main": "./lib/actions/Road_Disruption.js",
            "title": "Get active disruptions, filtered by road ids",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_Disruption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Road_Status": {
            "main": "./lib/actions/Road_Status.js",
            "title": "Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Road_Status.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search_Get": {
            "main": "./lib/actions/Search_Get.js",
            "title": "Search the site for occurrences of the query string. The maximum number of results returned is equal to the maximum page size\r\n            of 100. To return subsequent pages, use the paginated overload.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search_BusSchedules": {
            "main": "./lib/actions/Search_BusSchedules.js",
            "title": "Searches the bus schedules folder on S3 for a given bus number.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search_BusSchedules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search_MetaCategories": {
            "main": "./lib/actions/Search_MetaCategories.js",
            "title": "Gets the available search categories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search_MetaCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search_MetaSearchProviders": {
            "main": "./lib/actions/Search_MetaSearchProviders.js",
            "title": "Gets the available searchProvider names.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search_MetaSearchProviders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search_MetaSorts": {
            "main": "./lib/actions/Search_MetaSorts.js",
            "title": "Gets the available sorting options.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search_MetaSorts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetByGeoPoint": {
            "main": "./lib/actions/StopPoint_GetByGeoPoint.js",
            "title": "Gets a list of StopPoints within {radius} by the specified criteria",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetByGeoPoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_MetaCategories": {
            "main": "./lib/actions/StopPoint_MetaCategories.js",
            "title": "Gets the list of available StopPoint additional information categories",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_MetaCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_MetaModes": {
            "main": "./lib/actions/StopPoint_MetaModes.js",
            "title": "Gets the list of available StopPoint modes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_MetaModes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_MetaStopTypes": {
            "main": "./lib/actions/StopPoint_MetaStopTypes.js",
            "title": "Gets the list of available StopPoint types",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_MetaStopTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetByMode": {
            "main": "./lib/actions/StopPoint_GetByMode.js",
            "title": "Gets a list of StopPoints filtered by the modes available at that StopPoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_DisruptionByMode": {
            "main": "./lib/actions/StopPoint_DisruptionByMode.js",
            "title": "Gets a distinct list of disrupted stop points for the given modes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_DisruptionByMode.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_StopPoint_Search": {
            "main": "./lib/actions/get_StopPoint_Search.js",
            "title": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_StopPoint_Search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_StopPoint_Search__query_": {
            "main": "./lib/actions/get_StopPoint_Search__query_.js",
            "title": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_StopPoint_Search__query_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetServiceTypes": {
            "main": "./lib/actions/StopPoint_GetServiceTypes.js",
            "title": "Gets the service types for a given stoppoint",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetServiceTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetBySms": {
            "main": "./lib/actions/StopPoint_GetBySms.js",
            "title": "Gets a StopPoint for a given sms code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetBySms.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetByType": {
            "main": "./lib/actions/StopPoint_GetByType.js",
            "title": "Gets all stop points of a given type",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetByType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetByTypeWithPagination": {
            "main": "./lib/actions/StopPoint_GetByTypeWithPagination.js",
            "title": "Gets all the stop points of given type(s) with a page number",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetByTypeWithPagination.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_StopPoint__ids_": {
            "main": "./lib/actions/get_StopPoint__ids_.js",
            "title": "Gets a list of StopPoints corresponding to the given list of stop ids.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_StopPoint__ids_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_Disruption": {
            "main": "./lib/actions/StopPoint_Disruption.js",
            "title": "Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_Disruption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_Arrivals": {
            "main": "./lib/actions/StopPoint_Arrivals.js",
            "title": "Gets the list of arrival predictions for the given stop point id",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_Arrivals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_ReachableFrom": {
            "main": "./lib/actions/StopPoint_ReachableFrom.js",
            "title": "Gets Stopoints that are reachable from a station/line combination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_ReachableFrom.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_Crowding": {
            "main": "./lib/actions/StopPoint_Crowding.js",
            "title": "Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_Crowding.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_Direction": {
            "main": "./lib/actions/StopPoint_Direction.js",
            "title": "Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_Direction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_Route": {
            "main": "./lib/actions/StopPoint_Route.js",
            "title": "Returns the route sections for all the lines that service the given stop point ids",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_Route.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_StopPoint__id__placeTypes": {
            "main": "./lib/actions/get_StopPoint__id__placeTypes.js",
            "title": "Get a list of places corresponding to a given id and place types.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_StopPoint__id__placeTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetCarParksById": {
            "main": "./lib/actions/StopPoint_GetCarParksById.js",
            "title": "Get car parks corresponding to the given stop point id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetCarParksById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopPoint_GetTaxiRanksByIds": {
            "main": "./lib/actions/StopPoint_GetTaxiRanksByIds.js",
            "title": "Gets a list of taxi ranks corresponding to the given stop point id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopPoint_GetTaxiRanksByIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TravelTime_GetCompareOverlay": {
            "main": "./lib/actions/TravelTime_GetCompareOverlay.js",
            "title": "Gets the TravelTime overlay.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TravelTime_GetCompareOverlay.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TravelTime_GetOverlay": {
            "main": "./lib/actions/TravelTime_GetOverlay.js",
            "title": "Gets the TravelTime overlay.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TravelTime_GetOverlay.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Vehicle_GetEmissionsSurchargeCompliance": {
            "main": "./lib/actions/Vehicle_GetEmissionsSurchargeCompliance.js",
            "title": "Gets the Emissions Surcharge compliance for the Vehicle",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Vehicle_GetEmissionsSurchargeCompliance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Vehicle_GetUlezCompliance": {
            "main": "./lib/actions/Vehicle_GetUlezCompliance.js",
            "title": "Gets the Ulez Surcharge compliance for the Vehicle",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Vehicle_GetUlezCompliance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Vehicle_Get": {
            "main": "./lib/actions/Vehicle_Get.js",
            "title": "Gets the predictions for a given list of vehicle Id's.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Vehicle_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}